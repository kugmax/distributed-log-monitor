version: "3"
services:
  authors:
    image: estoyanov/bff-authors-service:1.0
    volumes:
      - ./logs:/logs
    container_name: bff-authors-service
    ports:
      - 8081:8081
    networks:
      - mynet
  books:
    image: estoyanov/bff-books-service:1.0
    volumes:
      - ./logs:/logs
    container_name: bff-books-service
    ports:
      - 8082:8082
    networks:
      - mynet
  web-sockets:
    image: estoyanov/bff-web-sockets-service:1.0
    container_name: bff-web-sockets-service
    ports:
      - 8083:8083
    networks:
      - mynet
  redis:
    image: redis:latest
    container_name: bff-redis
    ports:
      - 16379:6379
    networks:
      - mynet

  prometheus:
    image: prom/prometheus:latest
    container_name: bff-prometheus
    expose:
      - 9090
    networks:
      - mynet
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml

  pushgateway:
    image: prom/pushgateway:latest
    container_name: pushgateway
    expose:
      - 9091
    networks:
      - mynet
    labels:
      org.label-schema.group: "monitoring"


  grafana:
    image: grafana/grafana:latest
    container_name: bff-grafana
    volumes:
      - ./grafana/grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    expose:
      - 3000
    networks:
      - mynet
    labels:
      org.label-schema.group: "monitoring" 
    user: "${UID}:${GID}"

  nodeexporter:
    image: prom/node-exporter:v0.18.1
    container_name: nodeexporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    expose:
      - 9100
    networks:
      - mynet
    labels:
      org.label-schema.group: "monitoring"

  cadvisor:
    image: gcr.io/google-containers/cadvisor:v0.34.0
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
      #- /cgroup:/cgroup:ro #doesn't work on MacOS only for Linux
    restart: unless-stopped
    ports:
      - 8080:8080
    networks:
      - mynet
    labels:
      org.label-schema.group: "monitoring"

  caddy:
    image: stefanprodan/caddy
    container_name: caddy
    ports:
      - "3000:3000"
      - "9090:9090"
      - "9091:9091"
    volumes:
      - ./caddy:/etc/caddy
    environment:
      - ADMIN_USER=admin
      - ADMIN_PASSWORD=admin
    networks:
      - mynet
    labels:
      org.label-schema.group: "monitoring"


  bff-frontend:
    image: estoyanov/bff-frontend:1.0
    container_name: bff-frontend-service
    ports:
       - 8084:8084
    networks:
        - mynet

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
       - 9411:9411
    networks:
        - mynet


  elasticsearch:
    image: "docker.elastic.co/elasticsearch/elasticsearch:7.12.1"
    container_name: bff-elasticsearch
    environment:
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      - "discovery.type=single-node"
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data

  kibana:
      image: "docker.elastic.co/kibana/kibana:7.12.1"
      container_name: bff-kibana
      ports:
          - "5601:5601"

  filebeat:
      image: "docker.elastic.co/beats/filebeat:7.12.1"
      container_name: bff-filebeat
      user: root
      volumes:
          - "./filebeat/filebeat.yaml:/usr/share/filebeat/filebeat.yml:ro"
          - /var/lib/docker:/var/lib/docker:ro
          - /var/run/docker.sock:/var/run/docker.sock
          - "./logs:/usr/share/filebeat/logs"
      command: ["--strict.perms=false"]

volumes:
    elasticsearch_data:

networks:
  mynet:
